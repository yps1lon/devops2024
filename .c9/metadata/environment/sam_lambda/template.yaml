{"filter":false,"title":"template.yaml","tooltip":"/sam_lambda/template.yaml","ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":37,"column":26},"end":{"row":37,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"f12c1fdabd13c71746cfd7fab3fb22ad87564528","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  sam_lambda","","  Sample SAM Template for sam_lambda","","# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst","Globals:","  Function:","    Timeout: 3","    MemorySize: 128","","Resources:","  HelloWorldFunction:","    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction","    Properties:","      CodeUri: hello_world/","      Handler: app.lambda_handler","      Runtime: python3.9","      Architectures:","        - x86_64","      Events:","        HelloWorld:","          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api","          Properties:","            Path: /hello","            Method: get","","Outputs:","  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function","  # Find out more about other implicit resources you can reference within SAM","  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api","  HelloWorldApi:","    Description: \"API Gateway endpoint URL for Prod stage for Hello World function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/\"","  HelloWorldFunction:","    Description: \"Hello World Lambda Function ARN\"","    Value: !GetAtt HelloWorldFunction.Arn","  HelloWorldFunctionIamRole:","    Description: \"Implicit IAM Role created for Hello World function\"","    Value: !GetAtt HelloWorldFunctionRole.Arn",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":38,"column":50},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  SAM Template for Image Generation Lambda Function","","Globals:","  Function:","    Timeout: 60","    MemorySize: 500","","Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post  ","","Outputs:","  ImageGenerationApi:","    Description: \"API Gateway endpoint URL for image generation function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/\"","  ImageGenerationFunction:","    Description: \"Image Generation Lambda Function ARN\"","    Value: !GetAtt ImageGenerationFunction.Arn","  ImageGenerationFunctionIamRole:","    Description: \"Implicit IAM Role created for image generation function\"","    Value: !GetAtt ImageGenerationFunctionRole.Arn"]}],[{"start":{"row":3,"column":51},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"insert","lines":["  "]},{"start":{"row":4,"column":2},"end":{"row":5,"column":0},"action":"insert","lines":["",""]},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":23,"column":40},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":24,"column":0},"end":{"row":24,"column":10},"action":"insert","lines":["          "]}],[{"start":{"row":24,"column":8},"end":{"row":24,"column":10},"action":"remove","lines":["  "],"id":5},{"start":{"row":24,"column":6},"end":{"row":24,"column":8},"action":"remove","lines":["  "]}],[{"start":{"row":24,"column":6},"end":{"row":28,"column":61},"action":"insert","lines":["Policies:","        - Statement:","            - Effect: Allow","              Action: s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*"],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":50},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  SAM Template for Image Generation Lambda Function","  ","  ","","Globals:","  Function:","    Timeout: 60","    MemorySize: 500","","Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post  ","","Outputs:","  ImageGenerationApi:","    Description: \"API Gateway endpoint URL for image generation function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/\"","  ImageGenerationFunction:","    Description: \"Image Generation Lambda Function ARN\"","    Value: !GetAtt ImageGenerationFunction.Arn","  ImageGenerationFunctionIamRole:","    Description: \"Implicit IAM Role created for image generation function\"","    Value: !GetAtt ImageGenerationFunctionRole.Arn"],"id":48}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  SAM Template for Image Generation Lambda Function","  ","Globals:","  Function:","    Timeout: 60","    MemorySize: 500","","Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - S3CrudPolicy:  # AWS::Serverless managed policy for CRUD access to S3","            BucketName: pgr301-couch-explorers","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post  ","","Outputs:","  ImageGenerationApi:","    Description: \"API Gateway endpoint URL for image generation function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/\"","  ImageGenerationFunction:","    Description: \"Image Generation Lambda Function ARN\"","    Value: !GetAtt ImageGenerationFunction.Arn","  ImageGenerationFunctionIamRole:","    Description: \"Implicit IAM Role created for image generation function\"","    Value: !GetAtt ImageGenerationFunctionRole.Arn",""],"id":49}],[{"start":{"row":23,"column":25},"end":{"row":23,"column":79},"action":"remove","lines":["# AWS::Serverless managed policy for CRUD access to S3"],"id":50}],[{"start":{"row":10,"column":0},"end":{"row":30,"column":25},"action":"remove","lines":["Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - S3CrudPolicy:  ","            BucketName: pgr301-couch-explorers","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post "],"id":51},{"start":{"row":10,"column":0},"end":{"row":37,"column":26},"action":"insert","lines":["Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: ","                - s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","            - Effect: Allow","              Action:","                - bedrock:InvokeModel","              Resource: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-image-generator-v1","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post  "]}]]},"timestamp":1731538706936}